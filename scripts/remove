#!/bin/bash

# Load functions in the file
REMOVE_BDD () {	# Suppression de la base de donnée et de l'utilisateur associé.
# $1 = Nom de la base de donnée
	# Utilise '$app' comme nom d'utilisateur et de base de donnée
	db_user=$1
	if mysqlshow -u root -p$(sudo cat $MYSQL_ROOT_PWD_FILE) | grep -q "^| $db_user"; then
		echo "Delete db"
		ynh_mysql_drop_db $db_user
		ynh_mysql_drop_user $db_user
	fi
}

SECURE_REMOVE () {      # Suppression de dossier avec vérification des variables
	chaine="$1"	# L'argument doit être donné entre quotes simple '', pour éviter d'interpréter les variables.
	no_var=0
	while (echo "$chaine" | grep -q '\$')	# Boucle tant qu'il y a des $ dans la chaine
	do
		no_var=1
		global_var=$(echo "$chaine" | cut -d '$' -f 2)	# Isole la première variable trouvée.
		only_var=\$$(expr "$global_var" : '\([A-Za-z0-9_]*\)')	# Isole complètement la variable en ajoutant le $ au début et en gardant uniquement le nom de la variable. Se débarrasse surtout du / et d'un éventuel chemin derrière.
		real_var=$(eval "echo ${only_var}")		# `eval "echo ${var}` permet d'interpréter une variable contenue dans une variable.
		if test -z "$real_var" || [ "$real_var" = "/" ]; then
			echo "Variable $only_var is empty, suppression of $chaine cancelled." >&2
			return 1
		fi
		chaine=$(echo "$chaine" | sed "s@$only_var@$real_var@")	# remplace la variable par sa valeur dans la chaine.
	done
	if [ "$no_var" -eq 1 ]
	then
		if [ -e "$chaine" ]; then
			echo "Delete directory $chaine"
			sudo rm -r "$chaine"
		fi
		return 0
	else
		echo "No detected variable." >&2
		return 1
	fi
}

REMOVE_NGINX_CONF () {	# Suppression de la configuration nginx
	if [ -e "/etc/nginx/conf.d/$domain.d/$app.conf" ]; then	# Delete nginx config
		echo "Delete nginx config"
		sudo rm "/etc/nginx/conf.d/$domain.d/$app.conf"
	fi
}

REMOVE_FPM_CONF () {	# Suppression de la configuration du pool php-fpm
	if [ -e "/etc/php5/fpm/pool.d/$app.conf" ]; then	# Delete fpm config
		echo "Delete fpm config"
		sudo rm "/etc/php5/fpm/pool.d/$app.conf"
	fi
	if [ -e "/etc/php5/fpm/conf.d/20-$app.ini" ]; then	# Delete php config
		echo "Delete php config"
		sudo rm "/etc/php5/fpm/conf.d/20-$app.ini"
	fi
#	sudo service php5-fpm reload
}

# Récupère les infos de l'application.
app=$YNH_APP_INSTANCE_NAME

# Source app helpers
source /usr/share/yunohost/helpers

domain=$(ynh_app_setting_get $app domain)
db_user=$(ynh_app_setting_get $app db_user)

REMOVE_BDD "$db_user" # Suppression de la base de donnée et de l'utilisateur associé.

SECURE_REMOVE '/var/www/$app'   # Suppression du dossier de l'application

REMOVE_NGINX_CONF       # Suppression de la configuration nginx

REMOVE_FPM_CONF # Suppression de la configuration du pool php-fpm

# Reload services after cleaning
sudo service php5-fpm reload
sudo service nginx reload

# Régénère la configuration de SSOwat
sudo yunohost app ssowatconf

echo -e "\e[0m" # Restore normal color
